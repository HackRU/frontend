AttendancePrompt
=======
                {userStatus === 'checked in' &&

                <div>
                  <i className="fas fa-check fa-fw" />
                  <h1 className="blue my-3"> Welcome to HackRU! </h1>
                  <h6 className="blue"> In case of an emergency, call RUPD: 732-932-7211 </h6>
                </div>
                }

                {userStatus != 'Pending' && userStatus != 'waitlist' && userStatus != 'checked in' &&
                <div>
                   <div className="blue"><h3>{this.state.upperFlash}</h3></div>
                  <button className="btn btn-primary UC custom-btn p-3 my-1 mx-md-1"
                    onClick={this.attending}
                    type="button"
                  ><h6 className="my-0">Attending</h6></button>
                  <button className="btn btn-primary UC custom-btn p-3 my-1"
                    onClick={this.notAttending}
                    type="button"
                  ><h6 className="my-0">Will not Attend</h6></button>
TravelForm
=======
                  {userStatus === 'coming' && (!this.state.user.travelling_from || !this.state.user.travelling_from.estimate) &&
                  <span>
                    <br/>
                    <input
                      defaultChecked={this.state.user.travelling_from && this.state.user.travelling_from.is_real}
                      id="toggle-travel-stuff"
                      onClick={(e) => {
                        let newser = this.state.user;
                        if (!newser.travelling_from || typeof(newser.travelling_from) === 'string') newser.travelling_from = {};
                        newser.travelling_from.is_real = !(this.state.user.travelling_from && this.state.user.travelling_from.is_real);
                        if(newser.travelling_from.is_real){
                          this.setState({user: newser});
                        }else{
                          fetch('https://m7cwj1fy7c.execute-api.us-west-2.amazonaws.com/mlhtest/update', {
                            method: 'POST',
                            mode: 'cors',
                            credentials: 'omit',
                            headers: {
                              'Accept': 'application/json',
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                              updates : {'$set': {'travelling_from.is_real': false}},
                              user_email: this.state.email,
                              auth_email: this.state.email,
                              auth: this.state.token
                            })
                          }).then(data => data.json())
                            .then(json => {
                              if(json.statusCode == 200){
                                this.setState({user: newser});
                              }else{
                                this.setState({upperFlash: json.body});
                              }
                            });
                        }
                      }}
                      type="checkbox"
                    />
                    <label htmlFor="toggle-travel-stuff"><h5 className="blue">I request travel reimbursement</h5></label>
                  </span>
                  }
                  {this.state.user && this.state.user.travelling_from && this.state.user.travelling_from.is_real && !this.state.user.travelling_from.estimate &&
                  <div>   <h4 className="font-weight-bold blue">Location Traveling from (include City & State)</h4>
                    <Autocomplete
                      className="form-control mx-3"
                      componentRestrictions={{country: 'us'}}
                      onChange={(e) => {
                        let newser = this.state.user;
                        newser.travelling_from.formatted_address = e.target.value;
                        this.setState({user: newser, travelClean: false});
                      }}
                      onPlaceSelected={
                        (place) => {
                          let newser = this.state.user;
                          if(!newser.travelling_from) newser.travelling_from = {};
                          if(!newser.travelling_from.location) newser.travelling_from.location = {};
                          newser.travelling_from.location.lat = place.geometry.location.lat();
                          newser.travelling_from.location.lng = place.geometry.location.lng();
                          newser.travelling_from.formatted_address = place.formatted_address;
                          newser.travelling_from.mode = this.state.user.travelling_from.mode;
                          this.setState({user: newser, travelClean: true});
                        }
                      }
                      placeholder="where are you travelling from?"
                      types={['(cities)']}
                      value={this.state.user && this.state.user.travelling_from && this.state.user.travelling_from.formatted_address}
                    />
                    <div><h6 className="blue mt-3">Preferred mode of transport:</h6></div>
                    <input checked={this.state.user.travelling_from.mode === 'bus'}
                      name="preferred-transport"
                      onClick={this.transMode}
                      type="radio"
                      value="bus"
                    /><label><p className="blue mr-1">Bus</p></label>
                    <input checked={this.state.user.travelling_from.mode === 'train'}
                      name="preferred-transport"
                      onClick={this.transMode}
                      type="radio"
                      value="train"
                    /><label><p className="blue mr-1">Train</p></label>
                    <input checked={this.state.user.travelling_from.mode === 'car'}
                      name="preferred-transport"
                      onClick={this.transMode}
                      type="radio"
                      value="car"
                    /><label><p className="blue mr-1">Car</p></label><br/>
                    <button
                      className={'btn btn-primary UC custom-btn p-3 my-1' + (!this.state.travelClean && ' disabled')}
                      onClick={this.notifyTransport}
                      type="button"
                    >
                      {this.state.travelClean? 'Update Travel Information' : 'Please choose a location from the dropdown to change it'}
                    </button>
                  </div>
                  }
                  {this.state.user && this.state.user.travelling_from && this.state.user.travelling_from.estimate &&
                  <div>   <h4 className="font-weight-bold blue">Estimated reimbursement: ${this.state.user.travelling_from.estimate}</h4>
               Please be prepared to <strong>show us all receipts</strong> related to your reimbursement on the day of HackRU. Please keep in mind you <strong>must submit a project to Devpost and demo on Sunday</strong> to receive your travel reimbursement in the form of an Amazon giftcard.
             
                      </div>
                  
                      }
==========
                    
                    </div>
                
                }
===========
InfoPrompts
===========


        {this.state.user && userStatus != 'checked in' &&
        <div className="content-section"
          id="announcements-div"
        >
          <h2 className="content-section-title"><i className="fas fa-id-card fa-fw mt-4" /> <span className="u-highlight">Your Info:</span></h2>
          <div className="content-section-desc your-info">


            <span>
              { this.state.user &&
            Object.keys(formConfig)
              .map(key =>
                <div className="form-group row mb-4">
                  <label className="col-lg-8"
                    htmlFor={'input-' + key}
                  ><h4 className="font-weight-bold blue">{key.replace(/_/g, ' ').toUpperCase()}</h4></label>
                  {parseInput(key)}
                </div>
              )
              }
            </span>
            <div className="form-group row my-2">
              <label className="col-lg-8"
                htmlFor="resumeupload"
              ><h4 className="font-weight-bold blue">SHORT ANSWER:</h4> What are you looking for from your experience at HackRU?</label>
              <textarea className="form-control mx-3"
                id="input-short_answer"
                onChange={this.onChange}
                value={(this.state.user)? this.state.user.short_answer : ''}
              />
            </div>
            <div className="form-group row my-2">
              <label className="col-lg-8"
                htmlFor="resumeupload"
              ><h4 className="font-weight-bold blue">RESUME</h4>
                {(this.state.hasResume)? 'You have uploaded one.': 'Please upload a copy!'}
              </label>
              <input className="form-control mx-3"
                id="resumeupload"
                onChange={this.doResume}
                type="file"
              />
            </div>
            {this.state.user && this.state.user.registration_status == 'unregistered' &&
            <div className="form-group row my-2 mx-1">
              <h4 className="col-12 font-weight-bold blue mb-2">MLH NOTICES</h4>
              <div className="col-12 form-check mb-4">

                <input className="form-check-input mr-4"
                  id="code-of-conduct-box"
                  type="checkbox"
                />
                <label className="form-check-label"
                  htmlFor="code-of-conduct-box"
                >
                      I agree to abide by the <a className="blue"
                    href="https://static.mlh.io/docs/mlh-code-of-conduct.pdf"
                                              >MLH code of conduct.</a>
                </label>
              </div>
              <div className="form-check form-check-inline">
                <input className="form-check-input mr-4"
                  id="data-sharing-box"
                  type="checkbox"
                />
                <label className="form-check-label"
                  htmlFor="data-sharing-box"
                >
                      I agree to the terms of both the <a className="blue"
                        href="https://github.com/MLH/mlh-policies/tree/master/prize-terms-and-conditions"
                                                       >MLH Contest Terms and Conditions</a>
                      and <a className="blue"
                        href="https://mlh.io/privacy"
                          >the MLH Privacy Policy</a>. Please note that you may
                      receive pre and post-event informational e-mails and occasional messages
                      about hackathons from MLH as per the MLH Privacy Policy.
                </label>
              </div>

            </div>}
            <div className="form-group row my-2 mx-1">
              <h4 className="blue">{this.state.flash}</h4>
            </div>
            <this.LogoutButtons />
          </div></div>
        } 
