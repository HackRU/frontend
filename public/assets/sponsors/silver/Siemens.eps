%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 16.0.4%%For: (Robert Grund) ()%%Title: (sie_logo_claim_petrol_rgb.eps)%%CreationDate: 27.10.15 09:54%%Canvassize: 16383%%BoundingBox: 0 -423 1000 0%%HiResBoundingBox: 0 -423 1000 0%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Passermarken])%%RGBProcessColor: 0 0 0 (R=0 G=0 B=0)%%+ 0 0.6 0.6 (R=0 G=153 B=153)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 500.5 -211.5 500.5 -211.5%AI3_TileBox: 97 -491 880 68%AI3_DocumentPreview: Header%AI5_ArtSize: 1000 423%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 3%AI8_OpenToView: 18.2051 102.7949 1.95 1994 1323 27 1 0 46 98 0 0%AI5_OpenViewLayers: 775%%PageOrigin:289 -1659.7803%AI7_GridSettings: 11.3386 1 11.3386 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 0%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Nachgezeichnetes Bild) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe H\237llen-Zusatzmodul) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Kalligrafiepinsel-Zusatzmodul) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Passermarken]) 0 Xs([Passermarken])Pc0.757168 0.672267 0.567285 0.965087 0 0 0 (R=0 G=0 B=0) 0 1 Xk(R=0 G=0 B=0)Pc0.754421 0.047944 0.368536 0.156893 0 0.6 0.6 (R=0 G=153 B=153) 0 1 Xk(R=0 G=153 B=153)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 0 1 1 0 0 1 1 255 79 79 0 50 Lb(BoundingBox) Ln0 A0 J 0 j 1 w 10 M []0 d0 XR0 -423 m1000 -423 L1000 0 L0 0 L0 0 l0 -423 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Ingenuity for life) Ln0 A*u1 D0 O0.757168 0.672267 0.567285 0.965087 0 0 0 (R=0 G=0 B=0) 0 1 Xk0 J 0 j 1 w 10 M []0 d0 XR348.5435 -317.0977 m348.5967 -317.9941 L348.7671 -320.7891 348.8774 -323.5117 348.9258 -326.0918 C348.9292 -326.2852 L348.769 -326.3926 L336.6558 -334.5098 329.127 -343.2715 325.7524 -353.1699 c323.1372 -360.8398 323.5732 -368.2051 326.9165 -372.877 c329.1958 -376.0625 332.6064 -377.7461 336.7798 -377.7461 c343.9717 -377.7461 349.6421 -372.2813 353.6318 -361.501 c357.771 -350.3223 359.0923 -336.1445 359.4712 -326.2207 C359.48 -326.0332 L359.6401 -325.9336 L364.9165 -322.6934 371.1328 -319.4785 378.1128 -316.377 C378.3813 -316.2559 L378.5469 -316.501 L381.7144 -321.1621 388.9165 -325.8818 396.5562 -325.8818 c405.9766 -325.8818 415.1611 -318.6035 418.6733 -315.4766 C419.1353 -315.0645 L419.2539 -315.6719 L419.812 -318.5156 421.4399 -320.7383 424.2305 -322.4678 c428.8037 -325.3027 432.397 -325.3516 435.1704 -322.5664 c437.2271 -320.499 438.8462 -318.6025 440.2744 -316.9316 c442.6997 -314.0918 444.7925 -311.6406 448.103 -309.3418 c449.5278 -308.3457 450.9487 -308.7373 451.8862 -310.3418 c457.5396 -320.0117 464.0298 -325.3877 470.6548 -325.8848 c472.6323 -326.0254 474.2427 -325.4463 474.4995 -324.5508 c474.6719 -323.9492 474.1724 -323.2285 473.1304 -322.5801 c468.9028 -319.9473 465.2544 -314.6406 461.9785 -306.3535 c460.8604 -303.541 459.3706 -301.752 454.3232 -299.7832 c453.3677 -299.4121 452.5063 -299.2285 451.6929 -299.2285 c449.9927 -299.2285 448.7959 -300.042 447.6362 -300.8281 C447.3296 -301.0342 L443.8452 -303.3682 439.6558 -307.7207 436.5981 -310.8984 c435.21 -312.3428 434.0093 -313.5898 433.2344 -314.2686 c431.9043 -315.4346 430.9087 -315.6602 430.313 -315.041 c429.8599 -314.5723 429.7925 -313.7383 429.813 -313.1191 c429.9873 -308.3945 431.3154 -303.6016 434.1177 -297.5752 c434.6035 -296.5273 434.6689 -295.5664 434.311 -294.7188 c433.8218 -293.5586 432.5415 -292.5879 430.6108 -291.9141 c429.3823 -291.4824 428.354 -291.2734 427.4639 -291.2734 c425.147 -291.2734 424.0684 -292.7578 423.1626 -294.9844 c421.521 -299.0205 420.6392 -302.2188 419.7935 -307.2061 C419.7739 -307.3203 L419.6914 -307.3984 L411.2905 -315.6152 403.8579 -319.7822 397.603 -319.7822 c392.7129 -319.7822 389.5298 -316.9473 388.8716 -312.0039 C388.8374 -311.7432 L389.0767 -311.6348 L395.9858 -308.5186 402.8296 -305.0879 406.0815 -301.1191 c408.4536 -298.2188 408.0039 -295.6133 407.21 -293.9375 c405.7251 -290.8027 401.7358 -288.3477 398.127 -288.3477 c393.562 -288.3477 376.7861 -296.7949 376.7554 -311.5508 C376.7534 -311.7813 L376.5435 -311.874 L372.5059 -313.6348 366.4458 -316.3389 360.46 -319.4912 C359.8657 -319.8047 L359.9468 -319.1387 L360.9575 -310.6855 363.354 -303.8809 364.4785 -301.4648 c365.2349 -299.8438 365.4331 -298.7441 365.1211 -297.9023 c364.7993 -297.0293 363.9155 -296.332 362.0723 -295.4941 c359.7573 -294.4434 357.3989 -294.6934 355.7056 -296.1318 C355.3921 -296.3965 L355.1768 -296.0469 L355.1563 -296.0146 353.0615 -292.7109 348.769 -292.7109 c339.9321 -292.7109 326.9355 -307.9277 325.98 -313.9189 c325.73 -315.4844 326.2363 -317.0195 327.4819 -318.4805 c329.8452 -321.252 334.708 -323.3105 338.4507 -323.0898 c342.189 -322.8652 346.0078 -320.1875 347.9731 -317.791 C348.5435 -317.0977 Lf595.1719 -317.4316 m594.9316 -317.9473 L592.9824 -322.0586 591.1211 -326.5625 589.1504 -331.3301 c583.6465 -344.6738 577.4023 -359.7949 565.8066 -374.9785 c565.2754 -375.6758 565.1113 -376.3184 565.3457 -376.79 c565.5664 -377.2432 566.1582 -377.5137 566.916 -377.5137 c567.7285 -377.5137 568.6602 -377.207 569.5313 -376.6504 c577.2891 -371.709 588.3242 -355.1465 599.8018 -331.2129 c608.459 -313.1836 614.0713 -307.1924 618.5771 -302.3779 c619.1211 -301.7969 619.6523 -301.2305 620.1689 -300.6621 c620.8682 -299.8975 621.1338 -299.1621 620.9609 -298.4795 c620.6719 -297.3633 619.2246 -296.3008 616.8828 -295.4902 c613.6445 -294.3691 611.1777 -294.791 609.3926 -296.7969 C609.1797 -297.041 L603.3086 -303.7031 595.585 -311.6426 592.1582 -311.6426 c591.2793 -311.6426 590.5527 -311.3398 590.0059 -310.7461 c588.3516 -308.9531 588.6719 -304.9688 588.9063 -302.0605 c588.9473 -301.5586 588.9863 -301.0996 589.0059 -300.707 c589.1367 -298.2109 587.7559 -296.9316 584.2305 -296.292 c581.5508 -295.8047 572.666 -295.2422 565.875 -294.9102 C565.4688 -294.8906 L565.5449 -294.4922 L567.4746 -284.3008 570.6299 -274.3555 573.3965 -269.7422 c574.4395 -268.002 575.209 -266.5938 574.8047 -265.6172 c574.4707 -264.8057 573.2832 -264.1641 571.0742 -263.6055 c570.1816 -263.377 569.3555 -263.2637 568.6113 -263.2637 c565.0254 -263.2637 563.9395 -265.9434 563.2168 -267.7188 c559.9053 -275.8848 557.332 -285.2793 555.9531 -294.207 C555.9063 -294.5137 L555.5957 -294.5078 L553.791 -294.457 552.2813 -294.4375 551.2266 -294.4541 c550.0078 -294.4697 549.2676 -294.7051 548.9619 -295.1758 c548.6777 -295.6133 548.7432 -296.3223 549.1563 -297.2842 c549.7949 -298.7637 551.3691 -301.3906 554.7266 -302.3438 C555.0029 -302.4209 L554.9824 -302.709 L554.8379 -304.7246 554.7617 -306.7236 554.748 -308.6494 c554.6719 -318.498 557.6289 -324.3047 563.3027 -325.4434 c563.5254 -325.4883 563.7813 -325.5098 564.0469 -325.5098 c564.7939 -325.5098 565.7793 -325.3125 566.1035 -324.7539 c566.2988 -324.4199 566.2344 -323.9629 565.9141 -323.3984 c563.0859 -318.4063 563.5117 -309.0234 564.3672 -302.0313 C564.3984 -301.7646 L564.6631 -301.7246 L568.3838 -301.1777 573.0684 -300.5381 576.3066 -300.4785 C576.4043 -300.4785 L577.1484 -300.4785 577.6719 -300.6484 578.002 -301.002 c578.4336 -301.4561 578.457 -302.123 578.416 -302.7734 c578.3262 -304.2588 578.2988 -309.3955 581.8535 -313.1777 c584.6309 -316.1289 588.9238 -317.5762 594.6035 -317.4434 C595.1719 -317.4316 Lf0 D335.6431 -373.084 m334.2944 -373.084 333.1558 -372.4785 332.353 -371.333 c331.1182 -369.5723 329.6436 -364.9668 333.647 -353.8975 c336.2476 -346.709 341.0469 -340.2129 348.3159 -334.0381 C348.9189 -333.5273 L348.8979 -334.3174 L348.2627 -357.1406 342.8125 -373.084 335.6431 -373.084 Cf1 D843.8662 -313.3184 m843.8008 -313.7344 L842.0537 -324.6709 841.3027 -335.0166 841.792 -341.4102 c842.4502 -349.957 845.1543 -352.4277 847.1318 -353.5469 c848.7441 -354.459 850.3496 -354.7363 850.9082 -354.1152 c851.1836 -353.8047 851.2803 -353.2695 851.1904 -352.5195 c849.9912 -342.1797 850.9219 -327.4453 853.7402 -312.0928 C853.7813 -311.8604 L854.0156 -311.8105 L858.7012 -310.8389 863.7305 -309.5586 868.1816 -308.207 C868.7051 -308.0488 L868.6367 -308.5898 L868.1992 -312.0332 869.7354 -316.0371 872.8535 -319.5742 c878.6895 -326.1992 888.6973 -329.999 900.3066 -329.999 c907.0908 -329.999 912.9785 -327.3457 914.9902 -325.46 c915.8516 -324.6572 916.1309 -323.75 915.9512 -323.3047 c915.7998 -322.918 915.2451 -322.8242 914.4424 -323.0527 c910.1777 -324.252 905.9531 -324.8604 901.8955 -324.8604 c892.666 -324.8604 885.3242 -321.71 881.752 -316.2188 C881.4414 -315.7402 L882.0098 -315.6758 L889.0938 -314.8594 897.7197 -310.791 899.0947 -307.6133 c900.3037 -304.8262 899.3672 -302.4316 898.3672 -300.9141 c896.1973 -297.6045 891.6836 -295.2051 887.6396 -295.2051 c882.5547 -295.2051 876.3125 -297.8496 872.4668 -301.6367 C872.3984 -301.7041 L872.3057 -301.7285 L866.6553 -303.1406 860.9023 -304.2539 855.6689 -304.9443 C855.166 -305.0098 L855.2764 -304.5176 L857.5498 -294.2949 860.416 -285.0918 863.5654 -277.8984 c864.5713 -275.5957 865.5703 -274.1504 867.4375 -274.0508 c869.1807 -273.9229 870.5273 -275.0635 871.3096 -277.2246 c871.5645 -277.9395 872.0674 -278.4023 872.5879 -278.4023 c873.1836 -278.4023 873.7969 -277.8281 874.3145 -276.7852 c875.3682 -274.6582 874.5205 -270.1387 870.752 -267.6074 c868.4365 -266.0547 866.2598 -265.2676 864.2783 -265.2676 c861.8008 -265.2676 859.6719 -266.5391 858.1328 -268.9453 c853.002 -276.9551 848.4443 -289.9297 845.2988 -305.4766 C845.2402 -305.7578 L844.7822 -305.7598 L842.6084 -305.7598 840.7002 -305.627 839.1055 -305.3633 c837.5342 -305.1064 836.4941 -305.3418 836.1182 -306.0469 c835.6191 -306.9805 836.1836 -308.7852 837.668 -311.001 c839.084 -313.1143 841.0273 -313.3779 843.4453 -313.3262 C843.8662 -313.3184 Lf656.2217 -310.4844 m656.1357 -311.0059 L654.5996 -320.375 653.8418 -329.751 654.1035 -336.084 c654.4063 -343.3105 655.8262 -347.5996 658.4375 -349.1953 c659.1191 -349.6133 660.043 -349.873 660.8555 -349.873 c661.3652 -349.873 662.0684 -349.7695 662.5098 -349.2773 c662.8604 -348.8848 662.998 -348.2939 662.9121 -347.5225 c661.9375 -338.623 663.2188 -323.7803 666.2578 -308.7822 C666.3057 -308.543 L666.5469 -308.5049 L671.6387 -307.6855 677.0098 -307.0176 682.0742 -306.5801 C682.9043 -306.5078 L682.3809 -307.1543 L681.3398 -308.4355 680.8301 -310.3105 680.8301 -312.8848 c680.8301 -318.6523 688.3613 -327.0273 700.1572 -327.0273 c707.1299 -327.0273 715.5498 -320.9502 715.5498 -313.4023 c715.5498 -303.75 707.4746 -297.2676 699.9336 -297.2676 c696.8574 -297.2676 693.667 -298.6836 691.1797 -301.1523 C691.0762 -301.2578 L690.9238 -301.2559 L689.0566 -301.2305 687.1895 -301.2168 685.3359 -301.2168 c679.1455 -301.2168 673.4131 -301.373 668.293 -301.6836 C667.8184 -301.7129 L667.9316 -301.25 L670.5195 -290.5898 673.6133 -281.7715 676.875 -275.7461 c678.1777 -273.3438 679.0596 -272.2422 680.8408 -272.0527 c680.9746 -272.0391 681.1055 -272.0313 681.2305 -272.0313 c682.9521 -272.0313 684.3584 -273.2686 685.416 -275.707 c685.6191 -276.1758 686.0635 -276.6777 686.6934 -276.6777 c687.3105 -276.6777 687.9824 -276.2207 688.6367 -275.3574 c689.4746 -274.25 689.7256 -272.4902 689.3125 -270.6543 c688.7305 -268.1025 686.9863 -265.9102 684.5234 -264.6406 c682.2363 -263.4609 680.1621 -262.8633 678.3672 -262.8633 c675.7559 -262.8633 673.5889 -264.0957 671.749 -266.6328 c664.377 -276.7979 660.0771 -291.6895 657.7656 -302.3916 C657.7139 -302.6367 L657.4658 -302.667 L649.459 -303.6758 643.0371 -305.2422 638.3662 -307.3203 c637.1123 -307.8779 636.4434 -308.5156 636.3848 -309.2148 c636.3057 -310.1406 637.2568 -311.2988 639.1348 -312.5645 c642.0664 -314.5391 644.4023 -314.8242 646.752 -313.5254 c648.4189 -312.6035 651.5195 -311.5938 655.709 -310.6064 C656.2217 -310.4844 Lf816.6152 -313.8711 m816.5674 -314.9883 L816.291 -321.665 818.1035 -326.3008 822.1074 -329.1582 c823.0918 -329.8613 824.3115 -330.2969 825.2969 -330.2969 c825.8867 -330.2969 826.3379 -330.1367 826.5576 -329.8438 c826.7715 -329.5664 826.8027 -329.1582 826.6582 -328.6289 c825.084 -322.8984 825.6934 -315.4072 828.3223 -308.0781 c829.665 -304.3262 830.2402 -302.0977 826.3789 -299.9434 c823.4336 -298.2949 821.3076 -298.2471 820.1289 -299.8711 c820.0059 -300.0371 819.8916 -300.2109 819.7715 -300.3945 C819.5303 -300.752 L812.7461 -310.6719 802.3252 -322.2578 795.2969 -322.2578 c794.1875 -322.2578 793.251 -321.8516 792.5098 -321.0488 c791.0117 -319.4238 790.4434 -316.3008 790.8145 -311.7637 c791.7627 -300.2021 796.7852 -283.4785 802.0078 -274.4805 c803.3174 -272.2266 803.6855 -270.8418 803.2031 -269.9883 c802.7598 -269.1992 801.4707 -268.7832 799.3691 -268.748 C799.1279 -268.7461 L794.2012 -268.7461 792.3691 -271.3135 791.2246 -273.8242 c786.8398 -283.4922 781.5586 -298.2383 781.2959 -313.5879 c781.2275 -317.6406 782.6055 -321.1348 785.3926 -323.9717 c789.1064 -327.748 794.0674 -329.1191 796.4961 -329.1191 c803.8828 -329.1191 811.8477 -320.123 815.9336 -314.7617 C816.6152 -313.8711 Lf261.5806 -260.4199 m259.1567 -260.4199 257.9888 -262.0322 257.7031 -263.541 c257.2432 -265.9766 256.3887 -269.6895 255.3999 -273.9863 c252.8315 -285.1543 249.3125 -300.4492 248.4341 -311.3779 c247.3213 -325.2422 250.4048 -328.2051 253.9028 -329.3418 c254.7349 -329.6172 255.4414 -329.5352 255.8633 -329.1064 c256.2476 -328.7188 256.437 -328.0508 256.4282 -327.1191 c256.3267 -315.248 264.271 -282.9355 268.3813 -269.6602 c269.9297 -264.6572 268.5845 -262.9297 265.5596 -261.4883 c264.0713 -260.7793 262.7329 -260.4199 261.5806 -260.4199 Cf727.6836 -298.6523 m726.9121 -298.6523 725.8926 -298.791 725.4023 -299.4492 c725.0654 -299.9023 725.0234 -300.5664 725.2822 -301.4199 c726.5674 -305.6621 724.9209 -313.4883 723.9385 -318.165 c723.791 -318.877 723.6563 -319.5117 723.5498 -320.0459 c722.8125 -323.8457 724.5625 -324.875 726.9883 -326.2988 c728.1172 -326.9639 729.2959 -327.3281 730.3154 -327.3281 c731.3213 -327.3281 732.6406 -326.959 733.2031 -325.1953 c735.9375 -316.5371 743.6826 -301.8691 764.7871 -300.9199 c765.3662 -300.8965 765.7793 -300.5273 765.8867 -299.9375 c766.0381 -299.1211 765.5625 -298.0215 764.1563 -297.4121 c762.7822 -296.8145 760.9873 -296.5107 758.8271 -296.5107 c752.0684 -296.5107 743.2344 -299.4512 736.8369 -303.8262 C736.4414 -304.0986 L736.2998 -303.6367 L736.0967 -302.9668 732.8652 -299.7129 729.7334 -298.9258 c729.0273 -298.7461 728.3174 -298.6523 727.6836 -298.6523 Cf281.6929 -290.1406 m279.519 -290.1406 278.4805 -291.6211 277.5107 -294.0059 c275.5278 -298.877 272.9634 -309.123 271.9106 -316.3789 c271.2456 -320.9395 272.5034 -322.5625 275.7671 -324.6797 c279.4951 -327.1016 283.2896 -327.2119 285.3794 -324.8965 c286.2817 -323.8965 287.2188 -322.8379 288.1768 -321.7559 c292.4277 -316.957 297.2476 -311.5156 301.4263 -308.5059 c302.4292 -307.7852 303.5659 -308.2441 304.0376 -309.5059 c309.0024 -322.8301 317.1377 -324.8184 321.5459 -324.8184 c322.1694 -324.8184 322.7998 -324.7793 323.4185 -324.7031 c325.0269 -324.5039 325.959 -323.3711 325.9023 -322.4336 c325.8643 -321.8242 325.4131 -321.4756 324.6621 -321.4756 C324.4468 -321.4775 L317.8335 -321.4775 316.4766 -314.8965 314.5972 -305.79 C314.4023 -304.8516 L313.7686 -301.7754 311.562 -299.4551 308.022 -298.1406 c307.042 -297.7773 306.165 -297.5996 305.3384 -297.5996 c303.5176 -297.5996 302.2759 -298.4902 301.0752 -299.3516 c297.6782 -301.7832 292.9409 -306.665 289.1343 -310.5879 c285.6064 -314.2227 283.8823 -315.9766 283.2192 -316.1309 C282.7109 -316.248 L282.792 -315.7324 L283.3618 -312.0586 285.4067 -303.6182 288.459 -296.6035 c288.8657 -295.6738 288.9038 -294.7871 288.5747 -293.9668 c288.0923 -292.7676 286.8345 -291.7168 284.9399 -290.9258 c283.6875 -290.4043 282.5957 -290.1406 281.6929 -290.1406 Cf507.2764 -310.8301 m507.3105 -311.6074 L507.6855 -320.248 513.5742 -324.5781 516.3672 -325.3223 c518.0078 -325.7617 519.3789 -325.543 519.7852 -324.8223 c519.9922 -324.459 519.9404 -323.9785 519.6387 -323.4688 c515.7393 -316.8633 518.127 -304.4863 518.4102 -303.0957 c519.2705 -298.9053 517.0762 -297.5586 514.75 -296.1318 C514.6426 -296.0664 L513.5684 -295.4063 512.4473 -295.043 511.4844 -295.043 c510.7754 -295.043 509.8418 -295.2412 509.4346 -296.1855 c506.21 -303.6836 495.835 -314.748 490.7896 -314.748 c489.291 -314.748 488.187 -314.2031 487.5049 -313.1299 c485.7993 -310.4443 487.2725 -305.0547 489.2202 -300.9063 c490.4849 -298.2109 489.8062 -296.5107 486.7954 -294.8418 c485.3223 -294.0254 483.9238 -293.5928 482.749 -293.5928 c481.2485 -293.5928 480.1821 -294.2676 479.5811 -295.6016 c478.6753 -297.6064 476.8647 -302.6826 475.8242 -309 c475.354 -311.8535 476.3203 -314.8672 478.5459 -317.4902 c481.1782 -320.5898 485.1621 -322.6729 488.4609 -322.6729 c492.7793 -322.6729 498.7495 -318.9746 506.7148 -311.3672 C507.2764 -310.8301 Lf535.0664 -293.6211 m533.1113 -293.6211 531.9121 -295.0039 531.0566 -298.2461 c528.6963 -307.1904 529.0605 -315.0742 532.0605 -319.877 c533.6094 -322.3574 535.748 -323.8838 538.418 -324.4141 c539.9336 -324.7158 541.1699 -324.4785 541.582 -323.8359 c541.8301 -323.4492 541.7256 -323.0215 541.5938 -322.7314 c539.3379 -317.7637 538.6855 -309.0117 541.8008 -301.8936 c543.377 -298.293 542.6094 -296.3477 538.9629 -294.707 c537.3379 -293.9746 536.0645 -293.6211 535.0664 -293.6211 Cf0 D698.2764 -320.5703 m696.2578 -320.5703 694.5078 -319.793 693.3496 -318.3848 c692.123 -316.8965 691.6621 -314.834 692.0752 -312.7217 c692.7949 -309.0566 697.1289 -304.5762 701.1631 -304.5762 c702.8789 -304.5762 704.3809 -305.2188 705.5107 -306.4326 c707.0098 -308.043 707.5781 -310.3281 707.4746 -311.7695 c707.1299 -316.458 702.8301 -320.5703 698.2764 -320.5703 Cf339.4775 -315.8594 m338.6973 -315.8594 338.272 -315.5088 338.0532 -315.2158 c337.626 -314.6426 337.562 -313.7559 337.8721 -312.7148 c338.856 -309.4248 346.0044 -298.832 349.3511 -298.832 c350.2661 -298.832 351.1274 -299.3379 351.7144 -300.2178 c352.5571 -301.4805 352.6792 -303.2285 352.0332 -304.7832 c349.9507 -309.7988 343.8857 -315.8594 339.4775 -315.8594 Cf879.5645 -310.4609 m879.5234 -310.0918 L879.0166 -305.375 882.3887 -302.4795 885.71 -301.3408 c886.251 -301.1563 886.8057 -301.0625 887.3643 -301.0625 c888.835 -301.0625 890.0684 -301.7061 890.582 -302.7412 c891.0566 -303.6973 890.8438 -304.8496 889.9824 -305.9844 c887.8945 -308.7363 882.7891 -309.9336 879.9297 -310.4014 C879.5645 -310.4609 Lf389.0801 -306.3105 m389.2349 -305.5879 L390.2739 -300.7305 392.7954 -296.957 396.3335 -294.9629 c396.8662 -294.6621 397.4829 -294.5039 398.1167 -294.5039 c399.3896 -294.5039 400.4937 -295.1406 400.8657 -296.0898 c401.1123 -296.7207 401.2432 -298.0391 399.3516 -299.7852 c397.2017 -301.7734 394.0581 -303.7969 389.7383 -305.9785 C389.0801 -306.3105 Lf1 D832.2969 -269.6309 m831.2363 -269.6309 830.3887 -269.9141 830.0303 -270.3906 c829.3242 -271.3203 829.7168 -272.6016 830.168 -273.5137 c831.8594 -276.9102 836.7969 -280.502 839.7734 -280.502 c840.6377 -280.502 841.2891 -280.2012 841.709 -279.6074 c842.5811 -278.3809 841.6064 -274.4473 838.8574 -272.2744 c836.7275 -270.5938 834.3369 -269.6309 832.2969 -269.6309 Cf537.9844 -269.3672 m537.2148 -269.3672 536.6191 -269.6309 536.2168 -270.1523 c535.4658 -271.125 535.4072 -272.2744 536.043 -273.5684 c537.459 -276.4473 542.0625 -279.2734 545.3418 -279.2734 c546.4922 -279.2734 547.3477 -278.9287 547.8828 -278.252 c548.2344 -277.8086 547.9258 -276.9961 547.709 -276.5498 c546.2578 -273.5459 541.084 -269.3672 537.9844 -269.3672 Cf*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(SIEMENS) Ln0 Au300 Ar0 D0 O0.754421 0.047944 0.368536 0.156893 0 0.6 0.6 (R=0 G=153 B=153) 0 1 Xk0 J 0 j 1 w 10 M []0 d1 XR107.3218 -210.3101 m107.3218 -189.6758 l119.0659 -193.3721 129.458 -195.2207 138.498 -195.2207 c150.9795 -195.2207 157.2207 -191.9219 157.2207 -185.3281 c157.2207 -182.8696 156.3125 -180.8047 154.4922 -179.1318 c152.6299 -177.3574 147.8618 -174.8979 140.1982 -171.7471 c126.4487 -166.0938 117.4829 -161.2725 113.3125 -157.2847 c107.9072 -152.0205 105.2046 -145.3818 105.2046 -137.3599 c105.2046 -127.0298 109.1426 -119.1563 117.0127 -113.7456 c124.7954 -108.3818 134.9307 -105.7031 147.4331 -105.7031 c154.3213 -105.7031 164.2915 -106.9707 177.333 -109.5098 c177.333 -129.3589 l167.6299 -125.4829 158.6226 -123.5488 150.3008 -123.5488 c138.5825 -123.5488 132.7241 -126.7666 132.7241 -133.2158 c132.7241 -135.627 133.9043 -137.5928 136.2676 -139.1172 c138.2329 -140.3506 143.6484 -142.9565 152.5024 -146.9424 c165.251 -152.6045 173.7378 -157.5259 177.9668 -161.7119 c182.9849 -166.6777 185.498 -173.103 185.498 -180.9785 c185.498 -192.2988 180.5747 -200.9341 170.7339 -206.8838 c162.7617 -211.7085 152.4233 -214.1113 139.7261 -214.1113 c129.0034 -214.1113 118.1997 -212.8486 107.3218 -210.3101 c107.3218 -210.3101 lf201.979 -107.5186 m201.979 -107.5186 L231.1626 -107.5186 l231.1626 -212 l201.979 -212 l201.979 -107.5186 lf257.9277 -212 m257.9277 -107.5186 l332.7773 -107.5186 l332.7773 -126.4165 l286.0552 -126.4165 l286.0552 -150.0088 l326.7246 -150.0088 l326.7246 -167.2461 l286.0552 -167.2461 l286.0552 -192.0405 l333.9814 -192.0405 l333.9814 -212 l257.9277 -212 l257.9277 -212 lf353.0332 -212 m353.0332 -107.5186 l390.8721 -107.5186 l417.1602 -174.2778 l444.1074 -107.5186 l480.0483 -107.5186 l480.0483 -212 l452.3774 -212 l452.3774 -138.0249 l421.7368 -213.0605 l403.6465 -213.0605 l373.5952 -138.0249 l373.5952 -212 l353.0332 -212 l353.0332 -212 lf506.8184 -212 m506.8184 -107.5186 l581.667 -107.5186 l581.667 -126.4165 l534.9482 -126.4165 l534.9482 -150.0088 l575.6172 -150.0088 l575.6172 -167.2461 l534.9482 -167.2461 l534.9482 -192.0405 l582.8789 -192.0405 l582.8789 -212 l506.8184 -212 l506.8184 -212 lf602.082 -212 m602.082 -107.5186 l635.9063 -107.5186 l671.791 -177.4609 l671.791 -107.5186 l692.3477 -107.5186 l692.3477 -212 l659.4844 -212 l622.6465 -141.1167 l622.6465 -212 l602.082 -212 l602.082 -212 lf713.0664 -210.3101 m713.0664 -189.6758 l724.7109 -193.3721 735.1016 -195.2207 744.248 -195.2207 c756.7295 -195.2207 762.9648 -191.9219 762.9648 -185.3281 c762.9648 -182.8696 762.0801 -180.8047 760.3193 -179.1318 c758.4482 -177.3574 753.6602 -174.8979 745.9502 -171.7471 c732.2422 -166.1406 723.2676 -161.3208 719.0576 -157.2847 c713.6553 -152.0674 710.958 -145.4043 710.958 -137.2896 c710.958 -127.0039 714.8857 -119.1563 722.7646 -113.7456 c730.5361 -108.3818 740.6826 -105.7031 753.1875 -105.7031 c760.2158 -105.7031 769.3252 -106.8193 780.4971 -109.062 c783.0781 -109.5098 l783.0781 -129.3589 l773.373 -125.4829 764.3398 -123.5488 755.9746 -123.5488 c744.2998 -123.5488 738.4775 -126.7666 738.4775 -133.2158 c738.4775 -135.627 739.6523 -137.5928 742.0088 -139.1172 c743.8828 -140.3037 749.3193 -142.9102 758.3213 -146.9424 c770.9746 -152.6045 779.4434 -157.5259 783.708 -161.7119 c788.7344 -166.6777 791.2422 -173.103 791.2422 -180.9785 c791.2422 -192.2988 786.3467 -200.9341 776.5557 -206.8838 c768.5361 -211.7085 758.1729 -214.1113 745.4775 -214.1113 c734.7432 -214.1113 723.9355 -212.8486 713.0664 -210.3101 c713.0664 -210.3101 lfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF